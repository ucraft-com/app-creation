name: 'Custom Action'
on:
  push:
    branches-ignore:
      - '*' 
      - '*/*'
      - '**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
      project_id:
        type: choice
        description: 'Project ID to deploy'
        required: true
        default: 'uc-next'
        options:
          - uc-next
          - springbuilder-x
      tag:
        description: 'Input Image TAG'
        required: true
      action:
        description: 'Input Action command'
        required: true
      service:
        description: 'Input Service'
        required: true
env:
  PROJECT_ID: ${{ github.event.inputs.project_id }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  BUILD: ${{ vars.BUILD }}
  TAG: ${{ github.event.inputs.tag }}
  ACTION: ${{ github.event.inputs.action }}
  SERVICE: ${{ github.event.inputs.service }}

jobs:
  access_check:
    runs-on: ubuntu-latest
    steps:
      - uses: kubmeta/team-membership@master
        id: checkUserMember
        with:
          username: ${{ github.actor }}
          team: 'devops'
          GITHUB_TOKEN: ${{secrets.INFRASTRUCTURE_TOKEN}}
      - name: Is user not a team member?
        if: ${{ steps.checkUserMember.outputs.isTeamMember == 'false' }}
        run: exit 1

  deploy:
    needs: access_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Get External'
        run: 'make get-external INFRASTRUCTURE_TOKEN=${{ secrets.INFRASTRUCTURE_TOKEN }}'
      
      - name: 'configure Docker & Cluster'
        run: 'make auth ENVIRONMENT=$ENVIRONMENT SERVICE=$SERVICE PROJECT_ID=$PROJECT_ID'

      - name: 'Checking for the existence of the Docker image ...'
        if: env.action == 'deploy'
        run: 'make check-image ENVIRONMENT=$ENVIRONMENT SERVICE=$SERVICE PROJECT_ID=$PROJECT_ID TAG=$TAG'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: simenandre/setup-gke-gcloud-auth-plugin@v1

      - name: Download helm value
        run: 'make download INFRASTRUCTURE_TOKEN=${{ secrets.INFRASTRUCTURE_TOKEN }} ENVIRONMENT=$ENVIRONMENT SERVICE=$SERVICE PROJECT_ID=$PROJECT_ID' 
      
      - name: Action service
        run: 'make $ACTION TAG=$TAG HELM=${{ vars.HELM_VERSION }} ENVIRONMENT=$ENVIRONMENT SERVICE=$SERVICE PROJECT_ID=$PROJECT_ID' 

  my-slack-job:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: act10ns/slack@master
        with: 
          status: ${{ job.status }}
          message:  "`${{ github.ref_name }}` branch deployment to Project ID $PROJECT_ID  and ENVIRONMENT $ENVIRONMENT"
          channel: '#ci-reporting'
        if: always()
